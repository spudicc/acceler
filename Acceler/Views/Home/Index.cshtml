@{
    ViewBag.Title = "Home Page";
}


<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Alex+Brush&family=Quicksand:wght@300;400&family=Roboto:wght@100&family=Tangerine:wght@400;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="~/Content/Home/Index.css" />
    @*<link href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.css" rel="stylesheet" />*@
    <link href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.css" rel="stylesheet" />

    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.js"></script>
</head>
<body>

    @if (TempData["AlertMessage"] != null)
    {
        <script>
            swal("@TempData["AlertTitle"]", "@TempData["AlertMessage"]", "@TempData["AlertType"]");
        </script>
    }
    <div class="banner_placeholder">
        <img class="banner_img" src="~/Assets/Images/banner_photo.jpg" />
        <div class="homepage-title">
            Gdje ljubav dobiva drustvo
        </div>
    </div>
    @*<div>
            Dobrodošli na Acceler, mjesto za sve motoriste u Hrvatskoj!
        </div>*@

    <div id="map" style="width:70%;height:400px; display:flex; justify-content:center; margin:auto;"></div>
</body>
</html>

<script>
    (g => { var h, a, k, p = "The Google Maps JavaScript API", c = "google", l = "importLibrary", q = "__ib__", m = document, b = window; b = b[c] || (b[c] = {}); var d = b.maps || (b.maps = {}), r = new Set, e = new URLSearchParams, u = () => h || (h = new Promise(async (f, n) => { await (a = m.createElement("script")); e.set("libraries", [...r] + ""); for (k in g) e.set(k.replace(/[A-Z]/g, t => "_" + t[0].toLowerCase()), g[k]); e.set("callback", c + ".maps." + q); a.src = `https://maps.${c}apis.com/maps/api/js?` + e; d[q] = f; a.onerror = () => h = n(Error(p + " could not load.")); a.nonce = m.querySelector("script[nonce]")?.nonce || ""; m.head.append(a) })); d[l] ? console.warn(p + " only loads once. Ignoring:", g) : d[l] = (f, ...n) => r.add(f) && u().then(() => d[l](f, ...n)) })({
        key: "AIzaSyApOmG9SZxHFO1__cGEGaeDaCPJtbVtV1w",
        v: "weekly",
        // Use the 'v' parameter to indicate the version to use (weekly, beta, alpha, etc.).
        // Add other bootstrap parameters as needed, using camel case.
    });


    // Initialize and add the map
    let map;

    async function initMap() {

        // The location of Uluru
        const position = { lat: 45.50317498210913, lng: 15.526931719492831 };
        // Request needed libraries.
        const { Map } = await google.maps.importLibrary("maps");
        const { AdvancedMarkerElement } = await google.maps.importLibrary("marker");

        // The map, centered at Uluru
        map = new Map(document.getElementById("map"), {
            zoom: 15,
            center: position,
            mapId: "DEMO_MAP_ID",
            mapTypeId: "satellite"
        });

        // The marker, positioned at Uluru
        const marker = new AdvancedMarkerElement({
            map: map,
            position: position,
            title: "Uluru",
        });

        map.addListener('click', function (e) {
            console.log(e.latLng.lat());
            console.log(e.latLng.lng());
        }); 
    }

    initMap();
</script>
